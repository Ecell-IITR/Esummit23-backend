# Generated by Django 3.2.6 on 2022-10-24 09:53

import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('events', '__first__'),
        ('user', '0002_auto_20221024_1444'),
    ]

    operations = [
        migrations.AlterField(
            model_name='startupuser',
            name='referred_by',
            field=models.CharField(blank=True, default='', max_length=20, null=True),
        ),
        migrations.CreateModel(
            name='StudentUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=50, verbose_name='Name')),
                ('email', models.EmailField(db_index=True, max_length=100, verbose_name='EMail Id')),
                ('phone_number', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='Phone Number Not Valid', regex='^[6-9]\\d{9}$')], verbose_name='Phone Number')),
                ('payment', models.IntegerField(default=0)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('password', models.CharField(max_length=16)),
                ('authToken', models.CharField(blank=True, max_length=1000, null=True)),
                ('student_type', models.CharField(choices=[('IITR', 'IITR Student'), ('NONIITR', 'Non IITR Student')], default='NONIITR', max_length=10)),
                ('enrollment_no', models.CharField(blank=True, max_length=10, null=True, verbose_name='Enrollment Number(If IITR Student)')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1, null=True, verbose_name='Gender')),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('college', models.CharField(max_length=200, verbose_name='College Name')),
                ('college_name', models.CharField(max_length=50, verbose_name='College Name')),
                ('esummit_id', models.CharField(db_index=True, max_length=20, unique=True)),
                ('referred_by', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('services', models.ManyToManyField(to='events.Services', verbose_name='Services')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProffUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=50, verbose_name='Name')),
                ('email', models.EmailField(db_index=True, max_length=100, verbose_name='EMail Id')),
                ('phone_number', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='Phone Number Not Valid', regex='^[6-9]\\d{9}$')], verbose_name='Phone Number')),
                ('payment', models.IntegerField(default=0)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('password', models.CharField(max_length=16)),
                ('authToken', models.CharField(blank=True, max_length=1000, null=True)),
                ('organisation_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Organisation From')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1, null=True, verbose_name='Gender')),
                ('industry', models.CharField(blank=True, max_length=100, null=True, verbose_name='Industry From')),
                ('esummit_id', models.CharField(db_index=True, max_length=20, unique=True)),
                ('referred_by', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('services', models.ManyToManyField(to='events.Services', verbose_name='Services')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
